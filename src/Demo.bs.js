// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Js_exn = require("bs-platform/lib/js/js_exn.js");
var Express = require("bs-express/src/Express.js");
var Process = require("process");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Caml_js_exceptions = require("bs-platform/lib/js/caml_js_exceptions.js");

var app = Express.express(/* () */0);

var router = Express.router(undefined, undefined, undefined, /* () */0);

var routes = /* array */[
  "/1",
  "/2",
  "/3"
];

for(var i = 0; i <= 2; ++i){
  Express.App.get(app, Caml_array.caml_array_get(routes, i), Express.Middleware.from((function(i){
          return function (_req, _next) {
            var partial_arg = String(i);
            return (function (param) {
                return Express.$$Response.sendString(partial_arg, param);
              });
          }
          }(i))));
}

Express.Router.post(router, "/route_alerts", Express.Middleware.from((function (_req, _next) {
            return (function (param) {
                return Express.$$Response.sendString("{msg:\"test\"}", param);
              });
          })));

Express.App.get(app, "/", Express.Middleware.from((function (_req, _next) {
            return (function (param) {
                return Express.$$Response.sendString("Hello, World!", param);
              });
          })));

function onListen(e) {
  var val;
  try {
    val = e;
  }
  catch (raw_exn){
    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
    if (exn[0] === Js_exn.$$Error) {
      console.log(exn[1]);
      Process.exit(1);
      return /* () */0;
    } else {
      throw exn;
    }
  }
  console.log("Listening at http://127.0.0.1:3000");
  return /* () */0;
}

var server = Express.App.listen(app, 3000, onListen, /* () */0);

exports.app = app;
exports.router = router;
exports.routes = routes;
exports.onListen = onListen;
exports.server = server;
/* app Not a pure module */
